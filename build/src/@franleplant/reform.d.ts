// Generated by dts-bundle v0.6.1

declare module '@franleplant/reform' {
    import * as types from '@franleplant/reform/types';
    import * as core from '@franleplant/reform/core';
    import * as reactHelpers from '@franleplant/reform/reactHelpers';
    const exposing: {
        types: typeof types;
        core: typeof core;
        reactHelpers: typeof reactHelpers;
        validators: {
            get(key: string): types.Validator;
            set(key: string, value: types.Validator): void;
        };
    };
    export default exposing;
}

declare module '@franleplant/reform/types' {
    export interface Validator {
        (value: string | number | any, ruleValue?: any): boolean;
    }
    export interface ValidatorMap {
        [ruleKey: string]: Validator;
    }
    export interface Rules {
        [ruleKey: string]: boolean | string | Validator | any;
    }
    export interface ErrorMap {
        [ruleKey: string]: boolean;
    }
    export interface ErrorMapMap {
        [fieldName: string]: ErrorMap;
    }
    export interface ValidationAbleInstance {
        state: {
            fields: any;
            errors: any;
            formIsDirty?: boolean;
        };
        setState: any;
    }
}

declare module '@franleplant/reform/core' {
    import { ErrorMap, ErrorMapMap, Rules } from '@franleplant/reform/types';
    export function validateRules(rules: Rules, value: string | number): ErrorMap;
    export function mapHasErrors(errorMap?: ErrorMap): boolean;
    export function mapMapHasErrors(errorMapMap: ErrorMapMap): boolean;
}

declare module '@franleplant/reform/reactHelpers' {
    import { ValidationAbleInstance, Rules } from '@franleplant/reform/types';
    export function validate(this: ValidationAbleInstance, fieldName: string, rules: Rules): void;
    export function fieldIfError(this: ValidationAbleInstance, fieldName: string, errorKey: string): boolean;
    export function fieldHasErrors(this: ValidationAbleInstance, fieldName: string): boolean;
    export function formHasErrors(this: ValidationAbleInstance): boolean;
}

